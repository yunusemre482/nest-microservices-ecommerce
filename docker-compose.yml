version: '3.1'

services:
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./Dockerfile
      tags:
        - "api-gateway-image:latest"
      args:
        - APP=api-gateway


    volumes:
      - .:/usr/src/app
    ports:
      - '3000:3000'
    depends_on:
      - rabbitmq
      - redis
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - minio
    networks:
      - mongodb_nodejs
      - rabbitmq_nodejs
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniostorage:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data_container:/data
    command: redis-server

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: 'rabbitmq'
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    environment:
      RABBITMQ_DEFAULT_VHOST: vhost
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    networks:
      - rabbitmq_nodejs
  mongodb-primary:
    container_name: mongodb-primary
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db

    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGODB_ADVERTISED_HOSTNAME: mongodb-primary
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: replicasetkey123

  mongodb-secondary:
    image: mongo
    depends_on:
      - mongodb-primary
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-secondary
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: replicasetkey123
      MONGODB_INITIAL_PRIMARY_HOST: mongodb-primary
      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: example

  mongodb-arbiter:
    image: mongo
    depends_on:
      - mongodb-primary
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-arbiter
      MONGODB_REPLICA_SET_MODE: arbiter
      MONGODB_REPLICA_SET_KEY: replicasetkey123
      MONGODB_INITIAL_PRIMARY_HOST: mongodb-primary
      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

volumes:
  redis_data_container:
    driver: local
  mongodb_data_container:
  miniostorage:
    driver: local

networks:
  mongodb_nodejs:
    driver: bridge
  rabbitmq_nodejs:
    driver: bridge
